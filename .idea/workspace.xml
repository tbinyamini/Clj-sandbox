<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c9722cc4-c2ec-45df-be25-32131fd6dcf5" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/src/sandbox/ex2.clj" afterDir="false" />
    </list>
    <ignored path="$PROJECT_DIR$/out/" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FUSProjectUsageTrigger">
    <session id="1672295850">
      <usages-collector id="statistics.lifecycle.project">
        <counts>
          <entry key="project.closed" value="3" />
          <entry key="project.open.time.1" value="1" />
          <entry key="project.open.time.3" value="1" />
          <entry key="project.open.time.4" value="1" />
          <entry key="project.open.time.7" value="1" />
          <entry key="project.opened" value="4" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.open">
        <counts>
          <entry key="class" value="1" />
          <entry key="clj" value="11" />
          <entry key="msg" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.open">
        <counts>
          <entry key="CLASS" value="1" />
          <entry key="Clojure" value="11" />
          <entry key="PLAIN_TEXT" value="1" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.extensions.edit">
        <counts>
          <entry key="clj" value="8813" />
        </counts>
      </usages-collector>
      <usages-collector id="statistics.file.types.edit">
        <counts>
          <entry key="Clojure" value="8813" />
        </counts>
      </usages-collector>
    </session>
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/sandbox/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="-305">
              <caret selection-end-column="16" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/sandbox/ex2.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="502">
              <caret line="69" column="4" lean-forward="true" selection-start-line="69" selection-start-column="4" selection-end-line="69" selection-end-column="4" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.0-beta1/clojure-1.10.0-beta1.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="644">
              <caret line="2566" lean-forward="true" selection-start-line="2566" selection-end-line="2566" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/project.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="16">
              <caret line="1" column="49" lean-forward="true" selection-start-line="1" selection-start-column="49" selection-end-line="1" selection-end-column="49" />
            </state>
          </provider>
        </entry>
      </file>
      <file pinned="false" current-in-tab="false">
        <entry file="jar://$PROJECT_DIR$/lib/clojure-1.9.0.jar!/clojure/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="356">
              <caret line="2548" column="6" selection-start-line="2548" selection-start-column="6" selection-end-line="2548" selection-end-column="6" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>-&gt;list</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/sandox/core.clj" />
        <option value="$PROJECT_DIR$/src/sandbox_aa/core.clj" />
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/sandbox/core.clj" />
        <option value="$PROJECT_DIR$/src/sandbox/ex2.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds" fullScreen="true">
    <option name="y" value="24" />
    <option name="width" value="1680" />
    <option name="height" value="978" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="Clj-sandbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Clj-sandbox" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Clj-sandbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Clj-sandbox" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="Clj-sandbox" type="b2602c69:ProjectViewProjectNode" />
              <item name="Clj-sandbox" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="sandbox" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="PackagesPane" />
      <pane id="Scope" />
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="SearchEverywhereHistoryKey" value="appea&#9;PSI&#9;JAVA://sun.print.ServiceDialog.AppearancePanel" />
    <property name="com.android.tools.idea.instantapp.provision.ProvisionBeforeRunTaskProvider.myTimeStamp" value="1539874489206" />
    <property name="cursive.last.file.extension./Users/talbinyamini/IdeaProjects/Clj-sandbox/src" value="clj" />
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="ReplState" timestamp="1539893630788">{:repl-history {:ide [], :local [{:command &quot;(reduce\n    (fn [curr-min curr-elem]\n      (if (&lt; curr-elem curr-min)\n        curr-elem\n        curr-min))\n    0\n    [1 2 3 4 5 6])&quot;, :offset 131, :ns &quot;sandbox.core&quot;} {:command &quot;(reduce\n    (fn [curr-min curr-elem]\n      (if (&lt; curr-elem curr-min)\n        curr-elem\n        curr-min))\n    Double/POSITIVE_INFINITY\n    [1 2 3 4 5 6])&quot;, :offset 154, :ns &quot;sandbox.core&quot;} {:command &quot;(reduce\n    (fn [curr-min curr-elem]\n      (if (&lt; curr-elem curr-min)\n        curr-elem\n        curr-min))\n    Double/POSITIVE_INFINITY\n    [1 2 3 4 5 6 -10] )&quot;, :offset 159, :ns &quot;sandbox.core&quot;} {:command &quot;(reduce\n    (fn [curr-min curr-elem]\n      (if (and (&lt; curr-elem curr-min) (even? curr-elem))\n        curr-elem\n        curr-min))\n    Double/POSITIVE_INFINITY\n    [1 2 3 4 5 6 -10 -11] )&quot;, :offset 187, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v [1 2 3 4 5 -10 -11]] (filter even? v)\n                               (reduce\n                                 (fn [curr-min curr-elem]\n                                   (if (and (&lt; curr-elem curr-min) (even? curr-elem))\n                                     curr-elem\n                                     curr-min))\n                                 Double/POSITIVE_INFINITY\n                                 v))&quot;, :offset 418, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v [1 2 3 4 5 -10 -11]] (filter even? v)\n                               (reduce\n                                 (fn [curr-min curr-elem]\n                                   (if (&lt; curr-elem curr-min)\n                                     curr-elem\n                                     curr-min))\n                                 Double/POSITIVE_INFINITY\n                                 v))&quot;, :offset 394, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v (filter even? [1 2 3 4 5 -10 -11])]\n    (reduce\n           (fn [curr-min curr-elem]\n             (if (&lt; curr-elem curr-min)\n               curr-elem\n               curr-min))\n           Double/POSITIVE_INFINITY\n           v))&quot;, :offset 233, :ns &quot;sandbox.core&quot;} {:command &quot;(comment\n  (let [m {:a 1 :b 1 :c 2 :d 1 :e 2 :f 3}]\n    (reduce\n           (fn [curr-map curr-entry]\n             (if (:curr-entry curr-map)\n               (assoc curr-map (first (keys curr-entry)) (inc (get curr-map (first (keys curr-entry)))))\n               (assoc curr-map (first (keys curr-entry) (first (vals curr-entry))))))\n           {}\n           m)))&quot;, :offset 361, :ns &quot;sandbox.core&quot;} {:command &quot;(comment\n  (let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (if (get curr-map curr-entry)\n          (assoc curr-map curr-entry (inc (get curr-map curr-entry)))\n          (assoc curr-map curr-entry curr-entry))))\n    {}\n           v))&quot;, :offset 259, :ns &quot;sandbox.core&quot;} {:command &quot;(comment\n  (let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (if (get curr-map curr-entry)\n          (assoc curr-map curr-entry (inc (get curr-map curr-entry)))\n          (assoc curr-map curr-entry curr-entry)))\n      {}\n      v)))&quot;, :offset 256, :ns &quot;sandbox.core&quot;} {:command &quot;(comment\n  (let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (if (get curr-map curr-entry)\n          (assoc curr-map curr-entry (inc (get curr-map curr-entry)))\n          (assoc curr-map curr-entry 1)))\n      {}\n      v)))&quot;, :offset 247, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (if (get curr-map curr-entry)\n          (assoc curr-map curr-entry (inc (get curr-map curr-entry)))\n          (assoc curr-map curr-entry 1)))\n      {}\n      v))&quot;, :offset 235, :ns &quot;sandbox.core&quot;} {:command &quot;(update {:a 1} :a inc)&quot;, :offset 22, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (if (get curr-map curr-entry)\n          (update curr-map curr-entry inc)\n          (assoc curr-map curr-entry 1)))\n      {}\n      v))&quot;, :offset 208, :ns &quot;sandbox.core&quot;} {:command &quot;(let [v [1 1 2 1 2 3]]\n    (reduce\n      (fn [curr-map curr-entry]\n        (let [val (get curr-map curr-entry 0)]\n          (assoc curr-map curr-entry (inc val))))\n      {}\n      v))&quot;, :offset 182, :ns &quot;sandbox.core&quot;} {:command &quot;(defn bar \&quot;bar is a function with documentation\&quot;\n  [a b c] b)&quot;, :offset 61, :ns &quot;sandbox.core&quot;} {:command &quot;(meta #'bar)&quot;, :offset 12, :ns &quot;sandbox.core&quot;} {:command &quot;(meta 'bar)&quot;, :offset 11, :ns &quot;sandbox.core&quot;} {:command &quot;(:doc (meta #'bar))&quot;, :offset 19, :ns &quot;sandbox.core&quot;} {:command &quot;(defn hello \&quot;receives a name and returns a string with the concatenation of \\\&quot;Hello\\\&quot; and the name\&quot;\n  [name]\n  (str \&quot;Hello \&quot; name))&quot;, :offset 131, :ns &quot;sandbox.core&quot;} {:command &quot;(hello \&quot;Tal\&quot;)&quot;, :offset 13, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (= (hello \&quot;Amobee!\&quot;) \&quot;Hello Amobee!\&quot;))&quot;, :offset 46, :ns &quot;sandbox.core&quot;} {:command &quot;(defn zero-check \&quot;receives a number and returns \\\&quot;zero\\\&quot; if the number is zero and \\\&quot;non-zero\\\&quot; otherwise\&quot;\n  [n]\n  (zero? n)  \&quot;zero\&quot; \&quot;non-zero\&quot;)&quot;, :offset 144, :ns &quot;sandbox.core&quot;} {:command &quot;(zero-check 1)&quot;, :offset 14, :ns &quot;sandbox.core&quot;} {:command &quot;(zero-check 0)&quot;, :offset 14, :ns &quot;sandbox.core&quot;} {:command &quot;(applicator inc 11)&quot;, :offset 19, :ns &quot;sandbox.core&quot;} {:command &quot;(defn applicator [func number]\n  (func number))&quot;, :offset 47, :ns &quot;sandbox.core&quot;} {:command &quot;(fifth '(1 2 3 4 5 6))&quot;, :offset 22, :ns &quot;sandbox.core&quot;} {:command &quot;(nth-element '(1 2 3 4 5 6 7 8 9 10 11) 10)&quot;, :offset 43, :ns &quot;sandbox.core&quot;} {:command &quot;'(0 4 6)&quot;, :offset 8, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (= (select-1-5-7 (range 10)) '(0 4 6)))&quot;, :offset 47, :ns &quot;sandbox.core&quot;} {:command &quot;(select-1-5-7 (range 10))&quot;, :offset 25, :ns &quot;sandbox.core&quot;} {:command &quot;'(1 2)&quot;, :offset 6, :ns &quot;sandbox.core&quot;} {:command &quot;(println myMap)&quot;, :offset 15, :ns &quot;sandbox.core&quot;} {:command &quot;(assoc myMap :d (assoc-in [:d :e] 10))&quot;, :offset 38, :ns &quot;sandbox.core&quot;} {:command &quot;(assoc myMap :d (assoc-in myMap [:d :e] 10))&quot;, :offset 44, :ns &quot;sandbox.core&quot;} {:command &quot;(defn map-object [f m]\n  (zipmap [(keys m)] [(f (vals m))])\n  (map-object #(* 100 %) {:a 1 :b 2 :c 3}))&quot;, :offset 103, :ns &quot;sandbox.core&quot;} {:command &quot;(map-object (inc 2) {:a 1 :b 2 :c 3})&quot;, :offset 37, :ns &quot;sandbox.core&quot;} {:command &quot;(zipmap [1 2] [3 4])&quot;, :offset 20, :ns &quot;sandbox.core&quot;} {:command &quot;(zipmap [1 2] '(3 4))&quot;, :offset 21, :ns &quot;sandbox.core&quot;} {:command &quot;(keys a)&quot;, :offset 8, :ns &quot;sandbox.core&quot;} {:command &quot;(* 100 % a)&quot;, :offset 11, :ns &quot;sandbox.core&quot;} {:command &quot;(* 100 % (vals a))&quot;, :offset 18, :ns &quot;sandbox.core&quot;} {:command &quot;(#(* 100 %) (vals a))&quot;, :offset 21, :ns &quot;sandbox.core&quot;} {:command &quot;(inc (vals a))&quot;, :offset 14, :ns &quot;sandbox.core&quot;} {:command &quot;(apply f (vals a))&quot;, :offset 18, :ns &quot;sandbox.core&quot;} {:command &quot;(apply inc (vals a))&quot;, :offset 20, :ns &quot;sandbox.core&quot;} {:command &quot;(vals a)&quot;, :offset 8, :ns &quot;sandbox.core&quot;} {:command &quot;(apply inc '(3 4))&quot;, :offset 18, :ns &quot;sandbox.core&quot;} {:command &quot;(apply inc [3 4])&quot;, :offset 17, :ns &quot;sandbox.core&quot;} {:command &quot;(apply max [3 4])&quot;, :offset 17, :ns &quot;sandbox.core&quot;} {:command &quot;(def a (zipmap [1 2] '(3 4)))&quot;, :offset 29, :ns &quot;sandbox.core&quot;} {:command &quot;(map-object #(* 100 %) {:a 1 :b 2 :c 3})&quot;, :offset 40, :ns &quot;sandbox.core&quot;} {:command &quot;(sequence-&gt;map [10 20 30])&quot;, :offset 26, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (= (sequence-&gt;map [10 20 30]) {0 10 1 20 2 30}))&quot;, :offset 56, :ns &quot;sandbox.core&quot;} {:command &quot;(first a)&quot;, :offset 9, :ns &quot;sandbox.core&quot;} {:command &quot;(get a :a)&quot;, :offset 10, :ns &quot;sandbox.core&quot;} {:command &quot;(get a 1)&quot;, :offset 9, :ns &quot;sandbox.core&quot;} {:command &quot;(if (get a 1))&quot;, :offset 14, :ns &quot;sandbox.core&quot;} {:command &quot;(if (get a 1) 1)&quot;, :offset 16, :ns &quot;sandbox.core&quot;} {:command &quot;(if (get a 55) 1)&quot;, :offset 17, :ns &quot;sandbox.core&quot;} {:command &quot;(submap {:a 1 :b 3} {:a 1 :b 2 :c 3})&quot;, :offset 37, :ns &quot;sandbox.core&quot;} {:command &quot;2&quot;, :offset 1, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (false? (submap {:a 1 :b 2 :c 333} {:a 1 :b 2})))&quot;, :offset 57, :ns &quot;sandbox.core&quot;} {:command &quot;(defn submap [m1 m2]\n  (if (empty? m1)\n    true\n    (if (get m2 (first m1))\n      (submap (rest m1) m2)\n      false))\n  (assert (true? (submap {:a 1 :b 2} {:a 1 :b 2 :c 3}))))&quot;, :offset 175, :ns &quot;sandbox.core&quot;} {:command &quot;(submap {:a 1 :b 2} {:a 1 :b 2 :c 3})&quot;, :offset 37, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (true? (submap {:a 1 :b 2} {:a 1 :b 2 :c 3})))&quot;, :offset 54, :ns &quot;sandbox.core&quot;} {:command &quot;(assert (false? (submap {:a 1 :b 2 :c nil} {:a 1 :b 2})))&quot;, :offset 57, :ns &quot;sandbox.core&quot;} {:command &quot;(conj '(:b :c :d :e) :a)&quot;, :offset 24, :ns &quot;user&quot;} {:command &quot;(=\n  (list :b :c :d :e :a)\n  (conj '(:b :c :d :e) :a))&quot;, :offset 54, :ns &quot;user&quot;} {:command &quot;(pop '(:a :b :c :d :e)&quot;, :offset 22, :ns &quot;user&quot;} {:command &quot;(pop '(:a :b :c :d :e))&quot;, :offset 23, :ns &quot;user&quot;} {:command &quot;(count [42])&quot;, :offset 12, :ns &quot;user&quot;} {:command &quot;(subvec [:peanut :butter :and :jelly] 1 3)&quot;, :offset 42, :ns &quot;user&quot;} {:command &quot;(subvec [:peanut :butter :and :jelly] 1 4)&quot;, :offset 42, :ns &quot;user&quot;} {:command &quot;(subvec [:peanut :butter :and :jelly] 0 4)&quot;, :offset 42, :ns &quot;user&quot;} {:command &quot;({2006 \&quot;Torino\&quot;, 2010 \&quot;Vancouver\&quot;, 2014 \&quot;Sochi\&quot;} 2010)&quot;, :offset 54, :ns &quot;user&quot;} {:command &quot;{1 \&quot;January 2 \&quot;February\&quot;}&quot;, :offset 25, :ns &quot;user&quot;} {:command &quot;({1 \&quot;January 2 \&quot; February \&quot;})&quot;, :offset 29, :ns &quot;user&quot;} {:command &quot;({1 \&quot;January\&quot; 2 \&quot;February\&quot;})&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;{1 \&quot;January\&quot; 2 \&quot;February\&quot;}&quot;, :offset 26, :ns &quot;user&quot;} {:command &quot;(def a 6)&quot;, :offset 9, :ns &quot;user&quot;} {:command &quot;a&quot;, :offset 1, :ns &quot;user&quot;} {:command &quot;(defn a)&quot;, :offset 8, :ns &quot;user&quot;} {:command &quot;((comp-2 inc inc) 1)&quot;, :offset 20, :ns &quot;sandbox.core&quot;} {:command &quot;((comp-2 inc list) 1)&quot;, :offset 21, :ns &quot;sandbox.core&quot;} {:command &quot;((comp-2 list inc) 1)&quot;, :offset 21, :ns &quot;sandbox.core&quot;} {:command &quot;9&quot;, :offset 1} {:command &quot;(defn foo)&quot;, :offset 10, :ns &quot;user&quot;} {:command &quot;(partial-2 + 2)&quot;, :offset 15, :ns &quot;sandbox.core&quot;} {:command &quot;((partial-2 + 2) 10)&quot;, :offset 20, :ns &quot;sandbox.core&quot;} {:command &quot;((partial-2 str \&quot;aa\&quot;) \&quot;bbbb\&quot;)&quot;, :offset 29, :ns &quot;sandbox.core&quot;} {:command &quot;((partial-2 str \&quot;hello \&quot;) \&quot;Tal\&quot;)&quot;, :offset 32, :ns &quot;sandbox.core&quot;} {:command &quot;{:a 1}&quot;, :offset 6, :ns &quot;user&quot;} {:command &quot;{[:a :b] 1}&quot;, :offset 11, :ns &quot;user&quot;} {:command &quot;(get-in [:a :b])&quot;, :offset 16, :ns &quot;user&quot;} {:command &quot;(get-in {[:a :b] 1} [:a :b])&quot;, :offset 28, :ns &quot;user&quot;} {:command &quot;(f3 [1 2 3 4 5])&quot;, :offset 16, :ns &quot;sandbox.core&quot;} {:command &quot;(defn f [x] \n  (loop [x x] \n    (if (= 1 x) \n      1\n      (recur (* x (f (dec x)))))))&quot;, :offset 87, :ns &quot;sandbox.core&quot;} {:command &quot;(f 10)&quot;, :offset 6, :ns &quot;sandbox.core&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.1.10-beta">
    <configuration name="1.10-beta" type="ClojureREPL" factoryName="Local">
      <module name="sandbox" />
      <setting name="replType" value="1" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method v="2" />
    </configuration>
    <configuration name="Unnamed" type="ClojureREPL" factoryName="Local">
      <module name="sandbox" />
      <setting name="replType" value="0" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Clojure REPL.Unnamed" />
      <item itemvalue="Clojure REPL.1.10-beta" />
    </list>
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c9722cc4-c2ec-45df-be25-32131fd6dcf5" name="Default Changelist" comment="" />
      <created>1536828850137</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1536828850137</updated>
    </task>
    <servers />
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1680" height="1050" extended-state="0" />
    <layout>
      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.20818071" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info id="Image Layers" order="2" />
      <window_info id="Designer" order="3" />
      <window_info id="UI Designer" order="4" />
      <window_info id="Capture Tool" order="5" />
      <window_info id="Favorites" order="6" side_tool="true" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Find" order="1" />
      <window_info anchor="bottom" id="Run" order="2" sideWeight="0.525641" weight="0.26227796" />
      <window_info anchor="bottom" id="Debug" order="3" sideWeight="0.4993895" weight="0.39976826" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="bottom" id="TODO" order="6" />
      <window_info active="true" anchor="bottom" id="Terminal" order="7" sideWeight="0.4993895" visible="true" weight="0.3291536" />
      <window_info anchor="bottom" id="Event Log" order="8" sideWeight="0.50061053" side_tool="true" visible="true" weight="0.3291536" />
      <window_info anchor="bottom" id="Version Control" order="9" show_stripe_button="false" />
      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="right" id="Palette" order="3" />
      <window_info anchor="right" id="Capture Analysis" order="4" />
      <window_info anchor="right" id="Theme Preview" order="5" />
      <window_info anchor="right" id="REPL" order="6" side_tool="true" visible="true" weight="0.4065934" />
      <window_info anchor="right" id="Leiningen" order="7" />
      <window_info anchor="right" id="Palette&#9;" order="8" />
      <window_info anchor="right" id="Maven Projects" order="9" />
      <window_info anchor="right" x="0" y="0" width="370" height="850" id="Documentation" order="10" side_tool="true" weight="0.3297619" />
    </layout>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$USER_HOME$/Downloads/RE  Homework for Sunday.msg">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="jar://$APPLICATION_HOME_DIR$/jdk/Contents/Home/jre/lib/rt.jar!/sun/print/ServiceDialog.class">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="356">
          <caret line="170" column="18" selection-start-line="170" selection-start-column="18" selection-end-line="170" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="16">
          <caret line="1" column="49" lean-forward="true" selection-start-line="1" selection-start-column="49" selection-end-line="1" selection-end-column="49" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sandbox/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-305">
          <caret selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$PROJECT_DIR$/lib/clojure-1.9.0.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="356">
          <caret line="2548" column="6" selection-start-line="2548" selection-start-column="6" selection-end-line="2548" selection-end-column="6" />
        </state>
      </provider>
    </entry>
    <entry file="jar://$MAVEN_REPOSITORY$/org/clojure/clojure/1.10.0-beta1/clojure-1.10.0-beta1.jar!/clojure/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="644">
          <caret line="2566" lean-forward="true" selection-start-line="2566" selection-end-line="2566" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/sandbox/ex2.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="502">
          <caret line="69" column="4" lean-forward="true" selection-start-line="69" selection-start-column="4" selection-end-line="69" selection-end-column="4" />
        </state>
      </provider>
    </entry>
  </component>
</project>